plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "kotlin-parcelize"
    id "kotlin-kapt" // Required for annotation processing.
    id "dagger.hilt.android.plugin"
}

ext {
    nav_version = "2.4.2"
    lifecycle_version = "2.4.1"
    retrofit_version = "2.9.0"
    room_version = "2.4.2"
    glide_version = "4.13.1"
    hilt_version = "2.42"
    paging_version = "3.1.1"
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.mendelin.flickerapp"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        /* Flickr API key value */
        buildConfigField "String", "FLICKR_API_KEY", "\"87d371889f3c66a6756fb6437efa5880\""
        buildConfigField "int", "FLICKR_PER_PAGE", "20"

        /* REST API endpoint names */
        buildConfigField "String", "ENDPOINT_SEARCH_PHOTOS", "\"flickr.photos.search\""

        /* REST API parameter names */
        buildConfigField "String", "QUERY_METHOD", "\"method\""
        buildConfigField "String", "QUERY_API_KEY", "\"api_key\""
        buildConfigField "String", "QUERY_TAGS", "\"tags\""
        buildConfigField "String", "QUERY_PAGE", "\"page\""
        buildConfigField "String", "QUERY_PER_PAGE", "\"per_page\""
        buildConfigField "String", "QUERY_FORMAT", "\"format\""
        buildConfigField "String", "QUERY_MEDIA", "\"media\""
        buildConfigField "String", "QUERY_NOJSONCALLBACK", "\"nojsoncallback\""
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

            /* Keep local server for DEBUG build type */
            buildConfigField "String", "BASE_URL", "\"https://www.flickr.com/services/rest/\""
            buildConfigField("boolean", "RELEASE", "false")
        }

        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"

            /* Keep production server for RELEASE build type */
            buildConfigField "String", "BASE_URL", "\"https://www.flickr.com/services/rest/\""
            buildConfigField("boolean", "RELEASE", "true")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        useIR = true
    }

    kapt {
        useBuildCache true
        correctErrorTypes true
    }

    hilt {
        enableAggregatingTask = true
    }

    packagingOptions {
        resources {
            excludes += ["META-INF/proguard/androidx-annotations.pro"]
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
/* Testing */
    implementation fileTree(dir: "libs", include: ["*.aar", "*.jar"], exclude: [])
    
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation "app.cash.turbine:turbine:0.7.0"
    testImplementation "com.google.truth:truth:1.1.3"
    
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    

    /* Kotlin */
    implementation "androidx.core:core-ktx:1.7.0"

    /* Android libraries */
    implementation "androidx.appcompat:appcompat:1.4.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "com.google.android.material:material:1.6.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    /* Navigation components */
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    /* Lifecycle, LiveData, ViewModel */
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    /* Gson */
    implementation "com.google.code.gson:gson:2.9.0"

    /* Retrofit networking library */
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"

    /* Image handling */
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:annotations:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    /* Timber logging */
    implementation "com.jakewharton.timber:timber:5.0.1"

    /* Hilt - dependency injection */
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    /* Paging 3 */
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-rxjava3:$paging_version"

    /* RxJava */
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"
    implementation "io.reactivex.rxjava3:rxkotlin:3.0.1"
}